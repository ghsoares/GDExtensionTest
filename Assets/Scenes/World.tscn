[gd_scene load_steps=10 format=2]

[ext_resource path="res://Assets/Scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/Textures/Mars.png" type="Texture" id=2]

[sub_resource type="Curve" id=1]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=2]
curve = SubResource( 1 )

[sub_resource type="ParticlesMaterial" id=3]
emission_shape = 2
emission_box_extents = Vector3( 256, 256, 1 )
flag_disable_z = true
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
angle = 45.0
scale = 4.0
scale_random = 1.0
scale_curve = SubResource( 2 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec2 terrainSize = vec2(640, 320);
uniform sampler2D terrainHeightMap;
uniform sampler2D tex;
uniform float tilingSize = 32f;
uniform float tilingSineFrequency = 1f;
uniform float tilingSineMag = 2f;
uniform float tilingOffsetY = 0f;
uniform float heightMapResolution = .25f;

float ease(float x, float c) {
	if (x < 0f) x = 0f;
	if (x > 1f) x = 1f;
	
	if (c > 0f) {
		if (c < 1f) {
			return 1f - pow(1f - x, 1f / c);
		} else {
			return pow(x, c);
		}
	} else if (c < 0f) {
		if (x < 0.5f) {
			return pow(x * 2f, -c) * .5f;
		} else {
			return (1f - pow(1f - (x - .5f) * 2f, -c)) * .5f + .5f;
		}
	}
	
	return 0f;
}

void fragment() {
	vec2 uv = UV;
	uv.y = 1f - uv.y;
	vec2 pos = uv * terrainSize;
	
	float hUv = UV.x * terrainSize.x * heightMapResolution;
	
	float i1 = floor(hUv);
	float i2 = ceil(hUv);
	float t = (hUv - i1) / (i2 - i1);
	
	i1 /= terrainSize.x * heightMapResolution;
	i2 /= terrainSize.x * heightMapResolution;
	
	float h1 = (texture(terrainHeightMap, vec2(i1, 0)).x) * terrainSize.y;
	float h2 = (texture(terrainHeightMap, vec2(i2, 0)).x) * terrainSize.y;
	
	t = ease(t, 1f);
	
	float h = mix(h1, h2, t);
	//float h = (texture(terrainHeightMap, UV).x) * terrainSize.y;
	
	float diff = h - pos.y;
	
	float s = sin(pos.x * 3.1415 * .25f * tilingSineFrequency);
	s = (s + 1f) / 2f;
	
	diff -= s * tilingSineMag;
	diff = max(diff, 0);
	
	float uvX = pos.x / tilingSize;
	float uvY = diff / tilingSize;
	
	vec4 col = texture(tex, vec2(uvX, uvY + tilingOffsetY)) * COLOR;
	
	if (pos.y > h) {
		col.a = 0f;
	}
	
	COLOR = col;
}"

[sub_resource type="Image" id=8]
data = {
"data": PoolByteArray( 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 221, 220, 92, 62, 221, 220, 92, 62, 217, 216, 88, 62, 217, 216, 88, 62, 213, 212, 84, 62, 213, 212, 84, 62, 209, 208, 80, 62, 205, 204, 76, 62, 205, 204, 76, 62, 201, 200, 72, 62, 201, 200, 72, 62, 197, 196, 68, 62, 193, 192, 64, 62, 193, 192, 64, 62, 189, 188, 60, 62, 189, 188, 60, 62, 185, 184, 56, 62, 181, 180, 52, 62, 181, 180, 52, 62, 177, 176, 48, 62, 177, 176, 48, 62, 173, 172, 44, 62, 169, 168, 40, 62, 169, 168, 40, 62, 169, 168, 40, 62, 165, 164, 36, 62, 165, 164, 36, 62, 161, 160, 32, 62, 161, 160, 32, 62, 161, 160, 32, 62, 161, 160, 32, 62, 157, 156, 28, 62, 157, 156, 28, 62, 157, 156, 28, 62, 157, 156, 28, 62, 157, 156, 28, 62, 157, 156, 28, 62, 153, 152, 24, 62, 153, 152, 24, 62, 153, 152, 24, 62, 153, 152, 24, 62, 153, 152, 24, 62, 149, 148, 20, 62, 149, 148, 20, 62, 149, 148, 20, 62, 149, 148, 20, 62, 149, 148, 20, 62, 149, 148, 20, 62, 149, 148, 20, 62, 153, 152, 24, 62, 153, 152, 24, 62, 153, 152, 24, 62, 157, 156, 28, 62, 157, 156, 28, 62, 161, 160, 32, 62, 161, 160, 32, 62, 161, 160, 32, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 169, 168, 40, 62, 169, 168, 40, 62, 169, 168, 40, 62, 169, 168, 40, 62, 173, 172, 44, 62, 173, 172, 44, 62, 173, 172, 44, 62, 173, 172, 44, 62, 177, 176, 48, 62, 177, 176, 48, 62, 177, 176, 48, 62, 181, 180, 52, 62, 181, 180, 52, 62, 185, 184, 56, 62, 185, 184, 56, 62, 189, 188, 60, 62, 193, 192, 64, 62, 193, 192, 64, 62, 193, 192, 64, 62, 197, 196, 68, 62, 197, 196, 68, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 205, 204, 76, 62, 205, 204, 76, 62, 205, 204, 76, 62, 205, 204, 76, 62, 209, 208, 80, 62, 209, 208, 80, 62, 209, 208, 80, 62, 213, 212, 84, 62, 217, 216, 88, 62, 217, 216, 88, 62, 221, 220, 92, 62, 225, 224, 96, 62, 225, 224, 96, 62, 229, 228, 100, 62, 233, 232, 104, 62, 233, 232, 104, 62, 237, 236, 108, 62, 241, 240, 112, 62, 241, 240, 112, 62, 245, 244, 116, 62, 249, 248, 120, 62, 253, 252, 124, 62, 253, 252, 124, 62, 129, 128, 128, 62, 131, 130, 130, 62, 133, 132, 132, 62, 133, 132, 132, 62, 135, 134, 134, 62, 137, 136, 136, 62, 137, 136, 136, 62, 139, 138, 138, 62, 139, 138, 138, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 137, 136, 136, 62, 137, 136, 136, 62, 135, 134, 134, 62, 135, 134, 134, 62, 133, 132, 132, 62, 131, 130, 130, 62, 129, 128, 128, 62, 129, 128, 128, 62, 253, 252, 124, 62, 249, 248, 120, 62, 245, 244, 116, 62, 245, 244, 116, 62, 241, 240, 112, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 229, 228, 100, 62, 229, 228, 100, 62, 229, 228, 100, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 229, 228, 100, 62, 229, 228, 100, 62, 233, 232, 104, 62, 233, 232, 104, 62, 237, 236, 108, 62, 237, 236, 108, 62, 241, 240, 112, 62, 241, 240, 112, 62, 245, 244, 116, 62, 245, 244, 116, 62, 249, 248, 120, 62, 249, 248, 120, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 253, 252, 124, 62, 249, 248, 120, 62, 249, 248, 120, 62, 245, 244, 116, 62, 245, 244, 116, 62, 241, 240, 112, 62, 241, 240, 112, 62, 237, 236, 108, 62, 237, 236, 108, 62, 233, 232, 104, 62, 233, 232, 104, 62, 229, 228, 100, 62, 229, 228, 100, 62, 229, 228, 100, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 225, 224, 96, 62, 221, 220, 92, 62, 221, 220, 92, 62, 221, 220, 92, 62, 221, 220, 92, 62, 217, 216, 88, 62, 217, 216, 88, 62, 217, 216, 88, 62, 213, 212, 84, 62, 213, 212, 84, 62, 209, 208, 80, 62, 209, 208, 80, 62, 205, 204, 76, 62, 205, 204, 76, 62, 201, 200, 72, 62, 201, 200, 72, 62, 197, 196, 68, 62, 197, 196, 68, 62, 197, 196, 68, 62, 197, 196, 68, 62, 193, 192, 64, 62, 193, 192, 64, 62, 193, 192, 64, 62, 193, 192, 64, 62, 193, 192, 64, 62, 193, 192, 64, 62, 189, 188, 60, 62, 189, 188, 60, 62, 189, 188, 60, 62, 185, 184, 56, 62, 185, 184, 56, 62, 181, 180, 52, 62, 181, 180, 52, 62, 177, 176, 48, 62, 173, 172, 44, 62, 173, 172, 44, 62, 169, 168, 40, 62, 169, 168, 40, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 165, 164, 36, 62, 169, 168, 40, 62, 169, 168, 40, 62, 173, 172, 44, 62, 173, 172, 44, 62, 173, 172, 44, 62, 177, 176, 48, 62, 177, 176, 48, 62, 181, 180, 52, 62, 181, 180, 52, 62, 181, 180, 52, 62, 185, 184, 56, 62, 185, 184, 56, 62, 185, 184, 56, 62, 185, 184, 56, 62, 189, 188, 60, 62, 189, 188, 60, 62, 189, 188, 60, 62, 193, 192, 64, 62, 193, 192, 64, 62, 197, 196, 68, 62, 197, 196, 68, 62, 201, 200, 72, 62, 205, 204, 76, 62, 205, 204, 76, 62, 209, 208, 80, 62, 213, 212, 84, 62, 213, 212, 84, 62, 217, 216, 88, 62, 221, 220, 92, 62, 221, 220, 92, 62, 225, 224, 96, 62, 225, 224, 96, 62, 229, 228, 100, 62, 229, 228, 100, 62, 229, 228, 100, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 245, 244, 116, 62, 245, 244, 116, 62, 245, 244, 116, 62, 249, 248, 120, 62, 249, 248, 120, 62, 249, 248, 120, 62, 249, 248, 120, 62, 249, 248, 120, 62, 245, 244, 116, 62, 245, 244, 116, 62, 245, 244, 116, 62, 241, 240, 112, 62, 241, 240, 112, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 233, 232, 104, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 245, 244, 116, 62, 245, 244, 116, 62, 245, 244, 116, 62, 249, 248, 120, 62, 249, 248, 120, 62, 253, 252, 124, 62, 129, 128, 128, 62, 129, 128, 128, 62, 131, 130, 130, 62, 133, 132, 132, 62, 133, 132, 132, 62, 135, 134, 134, 62, 135, 134, 134, 62, 137, 136, 136, 62, 137, 136, 136, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 141, 140, 140, 62, 139, 138, 138, 62, 139, 138, 138, 62, 139, 138, 138, 62, 137, 136, 136, 62, 137, 136, 136, 62, 135, 134, 134, 62, 135, 134, 134, 62, 133, 132, 132, 62, 133, 132, 132, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 133, 132, 132, 62, 133, 132, 132, 62, 133, 132, 132, 62, 133, 132, 132, 62, 133, 132, 132, 62, 131, 130, 130, 62, 131, 130, 130, 62, 131, 130, 130, 62, 129, 128, 128, 62, 129, 128, 128, 62, 253, 252, 124, 62, 253, 252, 124, 62, 249, 248, 120, 62, 249, 248, 120, 62, 245, 244, 116, 62, 245, 244, 116, 62, 245, 244, 116, 62, 245, 244, 116, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 241, 240, 112, 62, 237, 236, 108, 62, 237, 236, 108, 62, 237, 236, 108, 62, 233, 232, 104, 62, 233, 232, 104, 62, 229, 228, 100, 62, 225, 224, 96, 62, 225, 224, 96, 62, 221, 220, 92, 62, 217, 216, 88, 62, 217, 216, 88, 62, 213, 212, 84, 62, 213, 212, 84, 62, 213, 212, 84, 62, 209, 208, 80, 62, 209, 208, 80, 62, 205, 204, 76, 62, 205, 204, 76, 62, 205, 204, 76, 62, 205, 204, 76, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 201, 200, 72, 62, 205, 204, 76, 62, 205, 204, 76, 62, 205, 204, 76, 62, 205, 204, 76, 62, 209, 208, 80, 62, 209, 208, 80, 62, 213, 212, 84, 62, 213, 212, 84, 62 ),
"format": "RFloat",
"height": 1,
"mipmaps": false,
"width": 512
}

[sub_resource type="ImageTexture" id=6]
flags = 4
flags = 4
image = SubResource( 8 )
size = Vector2( 512, 1 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 4 )
shader_param/terrainSize = Vector2( 1024, 600 )
shader_param/tilingSize = 256.0
shader_param/tilingSineFrequency = 0.25
shader_param/tilingSineMag = 4.0
shader_param/tilingOffsetY = 0.038
shader_param/heightMapResolution = 0.25
shader_param/terrainHeightMap = SubResource( 6 )
shader_param/tex = ExtResource( 2 )

[node name="World" type="Control"]
margin_right = 1024.0
margin_bottom = 600.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Parallax" type="ParallaxBackground" parent="."]

[node name="_1" type="ParallaxLayer" parent="Parallax"]
motion_scale = Vector2( 0.1, 0.1 )
motion_mirroring = Vector2( 512, 512 )

[node name="Particles" type="Particles2D" parent="Parallax/_1"]
modulate = Color( 1, 1, 1, 0.392157 )
position = Vector2( 256, 256 )
lifetime = 2.0
preprocess = 2.0
process_material = SubResource( 3 )

[node name="_2" type="ParallaxLayer" parent="Parallax"]
motion_scale = Vector2( 0.25, 0.25 )
motion_mirroring = Vector2( 512, 512 )

[node name="Particles" type="Particles2D" parent="Parallax/_2"]
modulate = Color( 1, 1, 1, 0.588235 )
position = Vector2( 256, 256 )
lifetime = 2.0
preprocess = 2.0
process_material = SubResource( 3 )

[node name="_3" type="ParallaxLayer" parent="Parallax"]
motion_scale = Vector2( 0.5, 0.5 )
motion_mirroring = Vector2( 512, 512 )

[node name="Particles" type="Particles2D" parent="Parallax/_3"]
position = Vector2( 256, 256 )
lifetime = 2.0
preprocess = 2.0
process_material = SubResource( 3 )

[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( 32, 32 )

[node name="Platforms" type="Node2D" parent="."]

[node name="Terrain" type="ColorRect" parent="."]
material = SubResource( 7 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Popups" type="Node2D" parent="."]
