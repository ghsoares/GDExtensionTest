[gd_scene load_steps=33 format=2]

[ext_resource path="res://Assets/Textures/Ship.png" type="Texture" id=1]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemUpdateParticle.cs" type="Script" id=2]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemDrawMesh.cs" type="Script" id=3]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/ParticleSystem2D.cs" type="Script" id=4]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemEmitOptions.cs" type="Script" id=5]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemEmitRate.cs" type="Script" id=6]
[ext_resource path="res://Assets/Scripts/Player/Player.cs" type="Script" id=7]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemInheritVelocity.cs" type="Script" id=8]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Custom Modules/HeightMapCollision.cs" type="Script" id=9]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemColorOverLife.cs" type="Script" id=10]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemEmitCone.cs" type="Script" id=11]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemSizeOverLife.cs" type="Script" id=12]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemEmitBurst.cs" type="Script" id=13]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Modules/ParticleSystemEmitCircle.cs" type="Script" id=14]
[ext_resource path="res://Assets/Scripts/ParticleSystem2D/Custom Modules/EmitTrail.cs" type="Script" id=15]
[ext_resource path="res://Assets/Textures/ShipNormalMap.tres" type="Texture" id=16]
[ext_resource path="res://Assets/Textures/BayerMatrixDithering.png" type="Texture" id=18]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D ditheringMatrix;
uniform float ditherScale = 1f;
uniform float ditherThreshold;

void fragment() {
	float d = distance(UV, vec2(.5f)) / .5f;
	if (d > 1f) discard;
	
	vec2 ditheringSize = vec2(textureSize(ditheringMatrix, 0));
	vec2 scSize = 1f / SCREEN_PIXEL_SIZE;
	
	vec2 ratio = scSize / ditheringSize;
	vec2 ditheringUv = ratio * SCREEN_UV;
	
	float dither = texture(ditheringMatrix, ditheringUv * ditherScale).r;
	dither += 1f;
	dither -= (1f - COLOR.a) * 2f;
	dither = step(ditherThreshold, dither);
	
	if (dither <= 0f) discard;
	
	COLOR.a = 1f;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/ditherScale = 1.0
shader_param/ditherThreshold = 0.5
shader_param/ditheringMatrix = ExtResource( 18 )

[sub_resource type="Curve" id=3]
max_value = 2.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0127401, 0, 0, Vector2( 0.561808, 1.53988 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), -1.23206, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0, 0.122047, 0.232283, 0.574803, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 1, 0.204102, 1, 0.836779, 1, 0, 0.455078, 1, 1, 0, 0, 0, 0 )

[sub_resource type="Curve" id=5]
max_value = 4.0
_data = [ Vector2( 0, 4 ), 0.0, 0.0127401, 0, 0, Vector2( 0.181734, 0.969325 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -1.18461, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0, 0.122047, 0.232283, 0.46063, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.849609, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1 )

[sub_resource type="Curve" id=7]
_data = [ Vector2( 0, 1 ), 0.0, 0.0127401, 0, 0, Vector2( 1, 0 ), -0.579244, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0, 0.122047, 0.232283, 0.46063, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.849609, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

uniform float dotMultiply = 1f;
uniform float dotSteps = 4f;
uniform float normalMapLod = 1f;
uniform mat4 transform;
uniform float parallax = 1f;
uniform vec2 velocity;
uniform vec2 velocityRange = vec2(15f, 30f);
uniform sampler2D gradient;
uniform sampler2D noise;
uniform vec2 noiseMotion;
uniform float noiseTiling;
uniform float noiseEaseCurve = 1f;
uniform float noiseMagnitude = .1f;

varying vec2 worldPosition;

void vertex() {
	vec2 pos = transform[3].rg * parallax;
	worldPosition = VERTEX + pos;
	worldPosition += TIME * noiseMotion;
}

float ease(float x, float c) {
	if (x < 0f) x = 0f;
	if (x > 1f) x = 1f;
	
	if (c > 0f) {
		if (c < 1f) {
			return 1f - pow(1f - x, 1f / c);
		} else {
			return pow(x, c);
		}
	} else if (c < 0f) {
		if (x < 0.5f) {
			return pow(x * 2f, -c) * .5f;
		} else {
			return (1f - pow(1f - (x - .5f) * 2f, -c)) * .5f + .5f;
		}
	}
	
	return 0f;
}

void fragment() {
	vec2 n = textureLod(NORMAL_TEXTURE, UV, normalMapLod).rg;
	n = n * 2f - 1f;
	
	if (length(n) <= .01f) n = vec2(0f);
	
	vec2 v = velocity;
	//v = vec2(cos(TIME), sin(TIME)) * velocityRange.y;
	v = normalize(v) * clamp(length(v), velocityRange.x, velocityRange.y);
	
	float d = dot(n, normalize(v));
	d *= dotMultiply;
	d *= clamp((length(velocity) - velocityRange.x) / (velocityRange.y - velocityRange.x), 0, 1);
	
	vec2 noiseUv = worldPosition / noiseTiling;
	
	float ns = textureLod(noise, noiseUv, 0).r;
	ns = ease(ns, noiseEaseCurve);
	d /= (1f + ns * noiseMagnitude);
	
	d = clamp(d, 0, 1);
	
	d = floor(d * dotSteps) / dotSteps;
	
	COLOR = texture(gradient, vec2(d, 0));
}"

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0, 0.396476, 0.709251, 1 )
colors = PoolColorArray( 1, 0, 0, 0, 1, 0, 0.228516, 0.792157, 1, 0.826172, 0, 0.889868, 1, 1, 1, 0.941176 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="OpenSimplexNoise" id=12]
persistence = 0.6

[sub_resource type="NoiseTexture" id=13]
flags = 3
seamless = true
noise = SubResource( 12 )

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 9 )
shader_param/dotMultiply = 3.0
shader_param/dotSteps = 4.0
shader_param/normalMapLod = 1.0
shader_param/transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
shader_param/parallax = 0.75
shader_param/velocity = Vector2( 0, 30 )
shader_param/velocityRange = Vector2( 15, 30 )
shader_param/noiseMotion = Vector2( 0, 0 )
shader_param/noiseTiling = 32.0
shader_param/noiseEaseCurve = -4.0
shader_param/noiseMagnitude = 2.0
shader_param/gradient = SubResource( 11 )
shader_param/noise = SubResource( 13 )

[sub_resource type="RectangleShape2D" id=15]
extents = Vector2( 8, 8 )

[node name="Player" type="RigidBody2D"]
position = Vector2( 370.107, 199.418 )
z_index = -1
gravity_scale = 0.0
contacts_reported = 4
contact_monitor = true
script = ExtResource( 7 )
maxAngularVelocity = 10.0
maxVelocity = 128.0
angularAcceleration = 15.0
maxThrusterForce = 40.0
velocityDrag = 0.1
angularVelocityDrag = 5.0
explodeAtSpeed = 15.0
scoreMinDistance = 2.0
scoreMinAngle = 3.0
scoreMinSpeed = 5.0

[node name="Particles" type="Node2D" parent="."]

[node name="Rocket" type="Node2D" parent="Particles"]
material = SubResource( 2 )
position = Vector2( 0, 6 )
script = ExtResource( 4 )
emitting = true
gravity = Vector2( 0, -60 )
onEditorSafeFPS = 1.0
onEditorDrawFps = 60

[node name="EmitOptions" type="Node" parent="Particles/Rocket"]
script = ExtResource( 5 )
maxSize = 4.0
maxSpeed = 100.0
minLifetime = 0.5
minSpeed = 70.0
minRotation = 45.0
maxRotation = 45.0

[node name="EmitRate" type="Node" parent="Particles/Rocket"]
script = ExtResource( 6 )
rate = 64.0

[node name="EmitCone" type="Node" parent="Particles/Rocket"]
script = ExtResource( 11 )
radius = 0.01
rotation = 90.0
coneAngle = 15.0

[node name="InheritVelocity" type="Node" parent="Particles/Rocket"]
script = ExtResource( 8 )

[node name="SizeOverLife" type="Node" parent="Particles/Rocket"]
script = ExtResource( 12 )
curve = SubResource( 3 )

[node name="HeightMapCollision" type="Node" parent="Particles/Rocket"]
script = ExtResource( 9 )
sizeOffset = 0.25

[node name="ColorOverLife" type="Node" parent="Particles/Rocket"]
script = ExtResource( 10 )
gradient = SubResource( 4 )

[node name="Update" type="Node" parent="Particles/Rocket"]
script = ExtResource( 2 )

[node name="Draw" type="Node" parent="Particles/Rocket"]
script = ExtResource( 3 )

[node name="Explosion" type="Node2D" parent="Particles"]

[node name="_1" type="Node2D" parent="Particles/Explosion"]
material = SubResource( 2 )
script = ExtResource( 4 )
gravity = Vector2( 0, -30 )
maxParticles = 32
emitOnStart = false
onEditorSafeFPS = 1.0
debugMode = true

[node name="EmitOptions" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 5 )
maxSize = 16.0
minSize = 4.0
maxSpeed = 200.0
minLifetime = 0.5
minSpeed = 10.0
minRotation = 45.0
maxRotation = 45.0

[node name="EmitCircle" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 14 )
radius = 8.0

[node name="EmitBurst" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 13 )
rate = 1.0
minAmount = 32
maxAmount = 32

[node name="Update" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 2 )

[node name="SizeOverLife" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 12 )
curve = SubResource( 5 )

[node name="HeightMapCollision" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 9 )

[node name="ColorOverLife" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 10 )
gradient = SubResource( 6 )

[node name="Draw" type="Node" parent="Particles/Explosion/_1"]
script = ExtResource( 3 )

[node name="_2" type="Node2D" parent="Particles/Explosion"]
material = SubResource( 2 )
script = ExtResource( 4 )
gravity = Vector2( 0, 98 )
maxParticles = 8
emitOnStart = false
onEditorSafeFPS = 1.0
timeScale = 2.0

[node name="EmitOptions" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 5 )
maxSize = 6.0
minSize = 2.0
maxSpeed = 150.0
minLifetime = 3.0
minSpeed = 112.5
minRotation = 45.0
maxRotation = 45.0
maxLifetime = 4.0

[node name="EmitCone" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 11 )
rotation = -90.0
coneAngle = 45.0

[node name="EmitBurst" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 13 )
rate = 0.5
minAmount = 3
maxAmount = 4

[node name="Update" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 2 )

[node name="SizeOverLife" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 12 )
curve = SubResource( 7 )

[node name="EmitTrail" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 15 )
rate = 0.2
particleSystemTrailPath = NodePath("../../_3")

[node name="HeightMapCollision" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 9 )
bounciness = 1.0

[node name="ColorOverLife" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 10 )
gradient = SubResource( 8 )

[node name="Draw" type="Node" parent="Particles/Explosion/_2"]
script = ExtResource( 3 )

[node name="_3" type="Node2D" parent="Particles/Explosion"]
material = SubResource( 2 )
script = ExtResource( 4 )
gravity = Vector2( 0, -30 )
emitOnStart = false
onEditorSafeFPS = 1.0

[node name="EmitOptions" type="Node" parent="Particles/Explosion/_3"]
script = ExtResource( 5 )
maxSize = 4.0
minSize = 2.0
maxSpeed = 0.0
minSpeed = 0.0
minRotation = 45.0
maxRotation = 45.0

[node name="EmitCircle" type="Node" parent="Particles/Explosion/_3"]
script = ExtResource( 14 )
radius = 2.0

[node name="Update" type="Node" parent="Particles/Explosion/_3"]
script = ExtResource( 2 )

[node name="SizeOverLife" type="Node" parent="Particles/Explosion/_3"]
script = ExtResource( 12 )
curve = SubResource( 7 )

[node name="ColorOverLife" type="Node" parent="Particles/Explosion/_3"]
script = ExtResource( 10 )
gradient = SubResource( 8 )

[node name="Draw" type="Node" parent="Particles/Explosion/_3"]
script = ExtResource( 3 )

[node name="Spr" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="Speed" type="Sprite" parent="."]
material = SubResource( 14 )
texture = ExtResource( 1 )
normal_map = ExtResource( 16 )

[node name="Col" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 15 )
