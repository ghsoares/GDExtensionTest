[gd_scene load_steps=15 format=2]

[ext_resource path="res://Scripts/Planet Generation/Platform.cs" type="Script" id=1]
[ext_resource path="res://Textures/BayerMatrixDithering.png" type="Texture" id=2]
[ext_resource path="res://Fonts/m5x7.ttf" type="DynamicFontData" id=3]

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 1, 1, 1, 1 )
corner_radius_bottom_right = 6
corner_radius_bottom_left = 6
anti_aliasing = false

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	COLOR.a = sign(COLOR.a);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[sub_resource type="DynamicFont" id=4]
outline_size = 1
outline_color = Color( 0, 0, 0, 1 )
extra_spacing_top = -1
font_data = ExtResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D ditheringMatrix;
uniform vec2 ditheringSize = vec2(32f);
uniform sampler2D verticalEnergyCurve;
uniform sampler2D horizontalGradient;

uniform float width = .1f;
uniform float frequency = 4f;
uniform float speed = 2f;
uniform float numWaves = 8f;
uniform float offset = .1f;

uniform bool invert;

uniform vec2 playerPosition;
uniform float playerFadeLength = 32f;

varying float time;
varying vec2 v;

vec2 get_wave(vec2 uv, float off) {
	float w = width;
	w *= uv.y;
	
	float x = uv.y * radians(360f) * frequency + time * speed + off * radians(360f);
	float fx = (sin(x) * (1f - w)) * .5f + .5f;
	float fx2 = (cos(x)) * .5f + .5f;
	fx2 = mix(0.0001f, 1f, fx2);
	
	float a = step(fx - w * .5f, uv.x);
	a *= step(uv.x, fx + w * .5f);
	
	return vec2(a, a*fx2);
}

void vertex() {
	time = TIME;
	v = VERTEX;
}

void fragment() {
	vec2 uv = UV;
	
	vec2 w = get_wave(uv, 0);
	
	float o = 0f;
	for (float i = 0f; i < numWaves - 1.1f; i += 1f) {
		o += offset;
		vec2 otherW = get_wave(uv, o);
		float t = step(w.g, otherW.g);
		w = mix(w, otherW, t);
	}
	
	COLOR.a *= step(.001f, w.r);
	
	if (invert) {
		COLOR.a *= step(.5f, 1f-w.g);
	} else {
		COLOR.a *= step(.5f, w.g);
	}
	
	vec4 col = texture(horizontalGradient, vec2(w.g));
	col.rgb *= 1f + texture(verticalEnergyCurve, vec2(UV.y)).r;
	
	COLOR *= col;
}



"

[sub_resource type="Gradient" id=6]
colors = PoolColorArray( 0.149951, 0.450657, 0.749023, 1, 0.0595703, 1, 0.939386, 1 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="Curve" id=8]
_data = [ Vector2( 0, 0 ), 0.0, -0.133737, 0, 0, Vector2( 0.997596, 1 ), 2.52613, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=9]
curve = SubResource( 8 )

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/ditheringSize = Vector2( 32, 32 )
shader_param/width = 0.192
shader_param/frequency = 0.147
shader_param/speed = 2.0
shader_param/numWaves = 3.0
shader_param/offset = 0.333
shader_param/invert = true
shader_param/playerPosition = Vector2( -128, -128 )
shader_param/playerFadeLength = 32.0
shader_param/ditheringMatrix = ExtResource( 2 )
shader_param/verticalEnergyCurve = SubResource( 9 )
shader_param/horizontalGradient = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/ditheringSize = Vector2( 32, 32 )
shader_param/width = 0.192
shader_param/frequency = 0.147
shader_param/speed = 2.0
shader_param/numWaves = 3.0
shader_param/offset = 0.333
shader_param/invert = false
shader_param/playerPosition = Vector2( -128, -128 )
shader_param/playerFadeLength = 32.0
shader_param/ditheringMatrix = ExtResource( 2 )
shader_param/verticalEnergyCurve = SubResource( 9 )
shader_param/horizontalGradient = SubResource( 7 )

[node name="Platform" type="Node2D"]
script = ExtResource( 1 )

[node name="Base" type="Node2D" parent="."]
z_index = 10

[node name="Color" type="Panel" parent="Base"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -16.0
margin_right = 16.0
margin_bottom = 13.0
custom_styles/panel = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Base/Color"]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 2.0
custom_fonts/font = SubResource( 4 )
text = "X5"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Light" type="Node2D" parent="."]
z_index = -1

[node name="Color" type="ColorRect" parent="Light"]
material = SubResource( 11 )
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -16.0
margin_top = -16.0
margin_right = 16.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Light2" type="Node2D" parent="."]
z_index = 10

[node name="Color" type="ColorRect" parent="Light2"]
material = SubResource( 10 )
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -16.0
margin_top = -16.0
margin_right = 16.0
__meta__ = {
"_edit_use_anchors_": false
}
