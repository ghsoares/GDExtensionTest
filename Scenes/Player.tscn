[gd_scene load_steps=48 format=2]

[ext_resource path="res://Textures/Ship.png" type="Texture" id=1]
[ext_resource path="res://Scripts/Player/Player.gd" type="Script" id=2]
[ext_resource path="res://Scripts/Player/PlayerHoverState.gd" type="Script" id=3]
[ext_resource path="res://Scripts/StateMachine.gd" type="Script" id=4]
[ext_resource path="res://Scripts/Player/PlayerDeadState.gd" type="Script" id=5]
[ext_resource path="res://Scripts/Player/PlayerLandedState.gd" type="Script" id=6]
[ext_resource path="res://Scripts/Player/ThrusterParticleSystem.gd" type="Script" id=7]
[ext_resource path="res://Materials/ParticleMaterial.tres" type="Material" id=8]
[ext_resource path="res://Scripts/Player/GroundThrusterParticleSystem.gd" type="Script" id=9]
[ext_resource path="res://Scripts/Player/ExplosionParticleSystem.gd" type="Script" id=10]
[ext_resource path="res://Scripts/Player/WindParticleSystem.gd" type="Script" id=11]
[ext_resource path="res://Textures/BayerMatrixDithering.png" type="Texture" id=12]
[ext_resource path="res://Scripts/Player/PlayerTakeOffState.gd" type="Script" id=13]
[ext_resource path="res://icon.png" type="Texture" id=14]
[ext_resource path="res://Scripts/Player/ThrusterExplosionParticleSystem.gd" type="Script" id=15]
[ext_resource path="res://Textures/ShipThruster.png" type="Texture" id=16]
[ext_resource path="res://Scripts/Player/SpeedFireParticleSystem.gd" type="Script" id=17]

[sub_resource type="Animation" id=1]
resource_name = "Loop"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5 ]
}

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
render_mode blend_add;

uniform sampler2D ditheringMatrix;
uniform float ditherScale = 1f;
uniform float roundness = 1f;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	
	float d = distance(UV, vec2(.5f)) / .5f;
	d *= roundness;
	
	vec2 ditheringSize = vec2(textureSize(ditheringMatrix, 0)) * ditherScale;
	vec2 scSize = 1f / SCREEN_PIXEL_SIZE;
	
	vec2 ratio = scSize / ditheringSize;
	vec2 ditheringUv = ratio * SCREEN_UV;
	
	float b = COLOR.a + texture(ditheringMatrix, ditheringUv).r;
	b = step(1f, b);
	
	COLOR.a = b;
	COLOR.a *= step(d, 1.0);
	COLOR.a *= step(UV.x, 1.0);
	COLOR.a *= step(0.0, UV.y);
}


"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/ditherScale = 1.0
shader_param/roundness = 1.0
shader_param/ditheringMatrix = ExtResource( 12 )

[sub_resource type="QuadMesh" id=4]

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 0.5 ), 0.0, 0.5, 0, 1, Vector2( 1, 1 ), 0.5, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0, 0.238739, 0.662162, 1 )
colors = PoolColorArray( 0, 0.364706, 0.8, 0, 0, 0.460938, 1, 1, 0, 1.5, 1.5, 1, 1, 1.75, 1.75, 1 )

[sub_resource type="QuadMesh" id=7]

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform float outlineSize = 1.0;

void fragment() {
	float d = distance(UV, vec2(.5)) / .5;
	
	COLOR.a *= step(1.0 - outlineSize, d);
	COLOR.a *= step(d, 1.0);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/outlineSize = 0.233

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0, 0.5, 1 )
colors = PoolColorArray( 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1 )

[sub_resource type="QuadMesh" id=11]

[sub_resource type="Curve" id=12]
_data = [ Vector2( 0, 0.506135 ), 0.0, 0.580732, 0, 1, Vector2( 0.850418, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -6.68531, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0, 0.238739, 0.662162, 1 )
colors = PoolColorArray( 0, 0.364706, 0.8, 0, 0, 0.460938, 1, 1, 0, 1, 1, 1, 1.5, 1.5, 1.5, 1 )

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;
render_mode blend_add;

uniform sampler2D ditheringMatrix;
uniform float ditherScale = 1f;
uniform float roundness = 1f;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	
	float d = distance(UV, vec2(.5f)) / .5f;
	d *= roundness;
	
	vec2 ditheringSize = vec2(textureSize(ditheringMatrix, 0)) * ditherScale;
	vec2 scSize = 1f / SCREEN_PIXEL_SIZE;
	
	vec2 ratio = scSize / ditheringSize;
	vec2 ditheringUv = ratio * SCREEN_UV;
	
	float b = COLOR.a + texture(ditheringMatrix, ditheringUv).r;
	b = step(1f, b);
	
	COLOR.a = b;
	COLOR.a *= step(d, 1.0);
	COLOR.a *= step(UV.x, 1.0);
	COLOR.a *= step(0.0, UV.y);
}


"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/ditherScale = 1.0
shader_param/roundness = 1.0
shader_param/ditheringMatrix = ExtResource( 12 )

[sub_resource type="QuadMesh" id=16]

[sub_resource type="Curve" id=17]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 1, Vector2( 1, 1 ), 0.0, 0.0, 1, 0 ]

[sub_resource type="Curve" id=18]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 1, Vector2( 0.495513, 0 ), -0.0875358, -0.0875358, 0, 0, Vector2( 0.746795, 0.981595 ), 0.125561, 0.0, 0, 0 ]

[sub_resource type="Curve" id=19]
max_value = 4.0
_data = [ Vector2( 0, 1.16564 ), 0.0, 1.03609, 0, 1, Vector2( 0.923718, 2.1227 ), 0.0, 0.0, 0, 0, Vector2( 1, 4 ), 24.61, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=20]
offsets = PoolRealArray( 0, 0.22252, 0.525469, 0.844504, 0.887399, 1 )
colors = PoolColorArray( 0, 0, 0, 0, 0.359375, 0, 0.151611, 1, 1, 0, 0, 1, 0.992188, 1, 0, 1, 1, 1, 1, 1, 2, 2, 2, 1 )

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;

uniform float roundness = 1f;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	
	float d = distance(UV, vec2(.5f)) / .5f;
	d *= roundness;
	
	COLOR.a *= step(d, 1.0);
	COLOR.a *= step(UV.x, 1.0);
	COLOR.a *= step(0.0, UV.y);
}


"

[sub_resource type="ShaderMaterial" id=22]
shader = SubResource( 21 )
shader_param/roundness = 1.0

[sub_resource type="Curve" id=23]
_data = [ Vector2( 0, 0 ), 0.0, 1.0, 0, 1, Vector2( 1, 1 ), 1.0, 0.0, 1, 0 ]

[sub_resource type="Shader" id=24]
code = "shader_type canvas_item;
render_mode blend_add;

uniform float roundness = 1f;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	
	float d = distance(UV, vec2(.5f)) / .5f;
	d *= roundness;
	
	COLOR.a *= step(d, 1.0);
	COLOR.a *= step(UV.x, 1.0);
	COLOR.a *= step(0.0, UV.y);
}


"

[sub_resource type="ShaderMaterial" id=25]
shader = SubResource( 24 )
shader_param/roundness = 1.0

[sub_resource type="QuadMesh" id=26]

[sub_resource type="Curve" id=27]
_data = [ Vector2( 0, 0 ), 0.0, 1.0, 0, 1, Vector2( 1, 1 ), 1.0, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=28]
offsets = PoolRealArray( 0, 0.22252, 0.525469, 0.844504, 1 )
colors = PoolColorArray( 0, 0, 0, 0, 0.359375, 0, 0.151611, 1, 1, 0, 0, 1, 0.992188, 1, 0, 1, 1, 1, 1, 1 )

[sub_resource type="RectangleShape2D" id=29]
extents = Vector2( 8, 8 )

[sub_resource type="RectangleShape2D" id=30]
extents = Vector2( 4, 16 )

[node name="Player" type="RigidBody2D"]
z_index = -1
gravity_scale = 0.0
script = ExtResource( 2 )
bodyFriction = 4.0
bodyAngFriction = 0.25
maxSafeVelocity = 16.0
maxSafeAngle = 10.0

[node name="Body" type="Node2D" parent="."]

[node name="Thruster" type="Sprite" parent="Body"]
visible = false
position = Vector2( 0, 4 )
texture = ExtResource( 16 )
offset = Vector2( 0, 8 )
hframes = 6
frame = 5

[node name="Anim" type="AnimationPlayer" parent="Body/Thruster"]
autoplay = "Loop"
playback_speed = 2.0
anims/Loop = SubResource( 1 )

[node name="Ship" type="Sprite" parent="Body"]
texture = ExtResource( 1 )

[node name="Particles" type="Node2D" parent="."]

[node name="Thruster" type="Node2D" parent="Particles"]
material = SubResource( 3 )
position = Vector2( 0, 5 )
z_index = -1
script = ExtResource( 7 )
local = true
numParticles = 64
lifetime = 0.4
gravity = Vector2( 0, 0 )
timeScale = 2.0
mesh = SubResource( 4 )
circle = 2.0
spreadAngle = 10.0
sizeRange = Vector2( 4, 8 )
sizeCurve = SubResource( 5 )
gradient = SubResource( 6 )

[node name="ThrusterExplosion" type="Node2D" parent="Particles"]
material = SubResource( 3 )
position = Vector2( 0, 5 )
z_index = 1
script = ExtResource( 15 )
local = true
numParticles = 64
mesh = SubResource( 7 )
spreadAngle = 45.0
amountRange = Vector2( 16, 32 )
speedRange = Vector2( 16, 64 )
sizeRange = Vector2( 4, 10 )
lifetimeRange = Vector2( 0.15, 0.3 )
sizeCurve = SubResource( 5 )
gradient = SubResource( 6 )

[node name="WaterThruster" type="Node2D" parent="Particles"]
material = SubResource( 9 )
position = Vector2( 0, 6 )
z_index = -1
script = ExtResource( 7 )
local = true
numParticles = 64
lifetime = 0.4
color = Color( 1, 1, 1, 0.5 )
gravity = Vector2( 0, 0 )
timeScale = 1.5
mesh = SubResource( 4 )
rate = 16.0
circle = 4.0
spreadAngle = 30.0
speedRange = Vector2( 32, 100 )
sizeRange = Vector2( 4, 8 )
sizeCurve = SubResource( 5 )
gradient = SubResource( 10 )

[node name="Sprite" type="Sprite" parent="Particles/WaterThruster"]
visible = false
use_parent_material = true
scale = Vector2( 0.05, 0.05 )
texture = ExtResource( 14 )

[node name="GroundThruster" type="Node2D" parent="Particles"]
material = ExtResource( 8 )
position = Vector2( 0, 6 )
script = ExtResource( 9 )
numParticles = 64
lifetime = 0.5
gravity = Vector2( 0, 0 )
mesh = SubResource( 11 )
maxDistance = 80.0
minDistance = 20.0
spread = 12.0
sizeRange = Vector2( 4, 6.667 )
velocityRange = Vector2( 16, 32 )
sizeCurve = SubResource( 12 )
gradient = SubResource( 13 )

[node name="WaterGroundThruster" type="Node2D" parent="Particles"]
material = SubResource( 9 )
position = Vector2( 0, 6 )
script = ExtResource( 9 )
numParticles = 64
lifetime = 0.5
color = Color( 1, 1, 1, 0.5 )
gravity = Vector2( 0, 0 )
mesh = SubResource( 11 )
maxDistance = 80.0
minDistance = 20.0
spread = 12.0
sizeRange = Vector2( 4, 6.667 )
velocityRange = Vector2( 16, 32 )
sizeCurve = SubResource( 12 )

[node name="Explosion" type="Node2D" parent="Particles"]
material = SubResource( 15 )
script = ExtResource( 10 )
numParticles = 128
gravity = Vector2( 0, -98 )
mesh = SubResource( 16 )
amountRange = Vector2( 32, 48 )
velocityRange = Vector2( 0, 512 )
sizeRange = Vector2( 4, 12 )
lifetimeRange = Vector2( 1, 2 )
drag = 10.0
processCurve = SubResource( 17 )
dragCurve = SubResource( 18 )
sizeCurve = SubResource( 19 )
gradient = SubResource( 20 )

[node name="Wind" type="Node2D" parent="Particles"]
material = SubResource( 22 )
z_index = -1
script = ExtResource( 11 )
local = true
numParticles = 32
color = Color( 1, 1, 1, 0.490196 )
gravity = Vector2( 0, 0 )
timeScale = 2.0
ratePerWindSpeed = 0.2
windSpeed = 32.0
maxRate = 16.0
waveMagnitude = 8.0
sizeRange = Vector2( 1, 1.5 )
sizeCurve = SubResource( 23 )

[node name="SpeedFire" type="Node2D" parent="Particles"]
material = SubResource( 25 )
script = ExtResource( 17 )
local = true
numParticles = 32
gravity = Vector2( 0, 0 )
mesh = SubResource( 26 )
maxRate = 64.0
spreadAngle = 60.0
velocityMultiply = 0.25
maxParticleVelocity = 64.0
sizeRange = Vector2( 2, 4 )
lifetimeRange = Vector2( 0.5, 0.75 )
sizeCurve = SubResource( 27 )
gradient = SubResource( 28 )

[node name="Col" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 29 )

[node name="ThrusterArea" type="Area2D" parent="."]
position = Vector2( 0, 21 )

[node name="Col" type="CollisionShape2D" parent="ThrusterArea"]
shape = SubResource( 30 )

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( 4 )

[node name="Hover" type="Node" parent="StateMachine"]
script = ExtResource( 3 )
maxAngularVelocity = 10.0
maxVelocity = 200.0
maxThrusterForce = 150.0
thrusterAddRate = 40.0
angularAcceleration = 5.0
velocityDrag = 0.3
angularVelocityDrag = 4.0
kickOffForceAdd = 2.0
kickOffTime = 1.0

[node name="Landed" type="Node" parent="StateMachine"]
script = ExtResource( 6 )

[node name="Dead" type="Node" parent="StateMachine"]
script = ExtResource( 5 )

[node name="TakeOff" type="Node" parent="StateMachine"]
script = ExtResource( 13 )
transitionTime = 8.0
transitionCurve = 4.0
