[gd_scene load_steps=25 format=2]

[ext_resource path="res://Scripts/Player.cs" type="Script" id=1]
[ext_resource path="res://Textures/Ship.png" type="Texture" id=2]
[ext_resource path="res://Scripts/Player/PlayerStateMachine.cs" type="Script" id=3]
[ext_resource path="res://Scripts/Player/States/PlayerHoverState.cs" type="Script" id=4]
[ext_resource path="res://Scripts/Particle Systems/EmissionParticleSystem.cs" type="Script" id=5]
[ext_resource path="res://Scripts/Particle Systems/BurstParticleSystem.cs" type="Script" id=6]
[ext_resource path="res://Textures/BayerMatrixDithering.png" type="Texture" id=7]
[ext_resource path="res://Scripts/Particle Systems/RaycastEmissionParticleSystem.cs" type="Script" id=8]
[ext_resource path="res://Scripts/Player/States/PlayerLandedState.cs" type="Script" id=9]
[ext_resource path="res://Scripts/Player/States/PlayerDeadState.cs" type="Script" id=10]

[sub_resource type="CapsuleShape2D" id=1]
radius = 6.0
height = 2.0

[sub_resource type="CircleShape2D" id=2]
radius = 2.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
render_mode blend_add;

uniform sampler2D ditheringMatrix;
uniform float ditherScale = 1f;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	
	float d = distance(UV, vec2(.5f)) / .5f;
	
	vec2 ditheringSize = vec2(textureSize(ditheringMatrix, 0)) * ditherScale;
	vec2 scSize = 1f / SCREEN_PIXEL_SIZE;
	
	vec2 ratio = scSize / ditheringSize;
	vec2 ditheringUv = ratio * SCREEN_UV;
	
	float b = COLOR.a + texture(ditheringMatrix, ditheringUv).r;
	b = step(1f, b);
	
	COLOR.a = b;
	COLOR.a *= step(d, 1.0);
	COLOR.a *= step(UV.x, 1.0);
	COLOR.a *= step(0.0, UV.y);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/ditherScale = 1.0
shader_param/ditheringMatrix = ExtResource( 7 )

[sub_resource type="QuadMesh" id=5]

[sub_resource type="Curve" id=6]
_data = [ Vector2( 0, 0.506135 ), 0.0, 0.493865, 0, 1, Vector2( 1, 1 ), 0.493865, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.239, 0.662, 0.899666, 1 )
colors = PoolColorArray( 0, 0.36, 0.8, 0, 0, 0.46, 1, 1, 0, 1.5, 1.5, 1, 0.703152, 1.67579, 1.67579, 1, 1, 1.75, 1.75, 1 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;
render_mode blend_add;

uniform sampler2D ditheringMatrix;
uniform float ditherScale = 1f;

void fragment() {
	COLOR *= texture(TEXTURE, UV);
	
	float d = distance(UV, vec2(.5f)) / .5f;
	
	vec2 ditheringSize = vec2(textureSize(ditheringMatrix, 0)) * ditherScale;
	vec2 scSize = 1f / SCREEN_PIXEL_SIZE;
	
	vec2 ratio = scSize / ditheringSize;
	vec2 ditheringUv = ratio * SCREEN_UV;
	
	float b = COLOR.a + texture(ditheringMatrix, ditheringUv).r;
	b = step(1f, b);
	
	COLOR.a = b;
	COLOR.a *= step(d, 1.0);
	COLOR.a *= step(UV.x, 1.0);
	COLOR.a *= step(0.0, UV.y);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/ditherScale = 1.0
shader_param/ditheringMatrix = ExtResource( 7 )

[sub_resource type="QuadMesh" id=10]

[sub_resource type="Gradient" id=11]
offsets = PoolRealArray( 0, 0.239, 0.662, 1 )
colors = PoolColorArray( 0, 0.36, 0.8, 0, 0, 0.46, 1, 1, 0, 1.5, 1.5, 1, 0.5, 1.25, 1.25, 1 )

[sub_resource type="QuadMesh" id=12]

[sub_resource type="Curve" id=13]
max_value = 2.0
_data = [ Vector2( 0, 0.506135 ), 0.0, 0.579141, 0, 1, Vector2( 0.9375, 1.04908 ), 0.0, 0.0, 0, 0, Vector2( 1, 2 ), 15.2147, 0.0, 1, 0 ]

[sub_resource type="Gradient" id=14]
offsets = PoolRealArray( 0, 0.239, 0.662, 1 )
colors = PoolColorArray( 0, 0.36, 0.8, 0, 0, 0.46, 1, 1, 0, 1.5, 1.5, 1, 0.703152, 1.67579, 1.67579, 1 )

[node name="Player" type="RigidBody2D"]
gravity_scale = 0.0
contacts_reported = 8
contact_monitor = true
script = ExtResource( 1 )

[node name="Body" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="Body"]
texture = ExtResource( 2 )

[node name="Col" type="CollisionShape2D" parent="."]
position = Vector2( 0, -1 )
shape = SubResource( 1 )

[node name="Col2" type="CollisionShape2D" parent="."]
position = Vector2( -6, 6 )
shape = SubResource( 2 )

[node name="Col3" type="CollisionShape2D" parent="."]
position = Vector2( 6, 6 )
shape = SubResource( 2 )

[node name="ParticleSystems" type="Node2D" parent="."]

[node name="Thruster" type="Node2D" parent="ParticleSystems"]
material = SubResource( 4 )
position = Vector2( 0, 6 )
z_index = -1
script = ExtResource( 5 )
local = true
numParticles = 64
mesh = SubResource( 5 )
sizeOverLife = SubResource( 6 )
colorOverLife = SubResource( 7 )
direction = Vector2( 0, 1 )
velocityRange = Vector2( 32, 64 )
sizeRange = Vector2( 4, 8 )
lifetimeRange = Vector2( 0.2, 0.4 )
emissionRate = 64.0

[node name="GroundThruster" type="Node2D" parent="ParticleSystems"]
material = SubResource( 9 )
position = Vector2( 0, 6 )
z_index = -1
script = ExtResource( 8 )
mesh = SubResource( 10 )
sizeOverLife = SubResource( 6 )
colorOverLife = SubResource( 11 )
direction = Vector2( 0, 1 )
velocityRange = Vector2( 32, 64 )
sizeRange = Vector2( 6, 10 )
lifetimeRange = Vector2( 0.25, 0.5 )
maxLength = 64.0
collisionSpread = 32.0
bounciness = 2.0

[node name="KickOff" type="Node2D" parent="ParticleSystems"]
material = SubResource( 9 )
position = Vector2( 0, 6 )
z_index = -1
script = ExtResource( 6 )
local = true
numParticles = 64
mesh = SubResource( 12 )
sizeOverLife = SubResource( 13 )
colorOverLife = SubResource( 14 )
spreadAngle = 70.0
direction = Vector2( 0, 1 )
velocityRange = Vector2( 0, 32 )
sizeRange = Vector2( 4, 10 )
lifetimeRange = Vector2( 0.2, 0.4 )
amountRange = Vector2( 16, 32 )

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( 3 )

[node name="Hover" type="Node" parent="StateMachine"]
script = ExtResource( 4 )
kickOffForceAdd = 2.0
kickOffTime = 1.0

[node name="Dead" type="Node" parent="StateMachine"]
script = ExtResource( 10 )

[node name="Landed" type="Node" parent="StateMachine"]
script = ExtResource( 9 )
