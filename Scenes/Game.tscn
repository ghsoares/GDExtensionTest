[gd_scene load_steps=7 format=2]

[ext_resource path="res://Scenes/Planet.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scripts/Game.cs" type="Script" id=2]
[ext_resource path="res://Materials/Grass.tres" type="Material" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float bloomRadius = 1.0;
uniform vec3 bloomThreshold = vec3(1.0);
uniform float bloomIntensity = 1.0;

vec3 GetBloomPixel(sampler2D tex, vec2 uv, vec2 texPixelSize) {
	return max(texture(tex, uv).rgb - bloomThreshold, 0f) * (1f + bloomThreshold);
}

vec3 GetBloom(sampler2D tex, vec2 uv, vec2 texPixelSize) {
	vec3 bloom = vec3(0.0);
	vec2 off = vec2(2) * texPixelSize * bloomRadius;
	bloom += GetBloomPixel(tex, uv + off * vec2(-1, -1), texPixelSize * bloomRadius) * 0.292893;
	bloom += GetBloomPixel(tex, uv + off * vec2(-1, 0), texPixelSize * bloomRadius) * 0.5;
	bloom += GetBloomPixel(tex, uv + off * vec2(-1, 1), texPixelSize * bloomRadius) * 0.292893;
	bloom += GetBloomPixel(tex, uv + off * vec2(0, -1), texPixelSize * bloomRadius) * 0.5;
	bloom += GetBloomPixel(tex, uv + off * vec2(0, 0), texPixelSize * bloomRadius) * 1.0;
	bloom += GetBloomPixel(tex, uv + off * vec2(0, 1), texPixelSize * bloomRadius) * 0.5;
	bloom += GetBloomPixel(tex, uv + off * vec2(1, -1), texPixelSize * bloomRadius) * 0.292893;
	bloom += GetBloomPixel(tex, uv + off * vec2(1, 0), texPixelSize * bloomRadius) * 0.5;
	bloom += GetBloomPixel(tex, uv + off * vec2(1, 1), texPixelSize * bloomRadius) * 0.292893;
	bloom /= 4.171573f;
	return bloom;
}

void fragment() {
	vec4 col = texture(TEXTURE, UV);
	vec3 bloom = GetBloom(TEXTURE, UV, TEXTURE_PIXEL_SIZE);
	col.rgb += bloom * bloomIntensity;
	
//	float g = dot(col.rgb, vec3(0.3, 0.59, 0.11));
//
//	col.rgb = vec3(g);
	
	COLOR = col;
}












"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/bloomRadius = 1.0
shader_param/bloomThreshold = Vector3( 0.9, 0.9, 0.9 )
shader_param/bloomIntensity = 1.0

[sub_resource type="ViewportTexture" id=3]
viewport_path = NodePath("View")

[node name="Game" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="View" type="Viewport" parent="."]
size = Vector2( 960, 540 )
size_override_stretch = true
render_target_v_flip = true

[node name="Planet" parent="View" instance=ExtResource( 1 )]

[node name="Line2D" type="Line2D" parent="View"]
visible = false
material = ExtResource( 3 )
position = Vector2( 0, 64 )
points = PoolVector2Array( 4096, 0, 0, 0 )
width = 32.0
default_color = Color( 1, 1, 1, 1 )
texture_mode = 2

[node name="ZoomCamera" type="Camera2D" parent="."]
visible = false
current = true
process_mode = 0
limit_left = 0
limit_top = 0
limit_right = 960
limit_bottom = 540

[node name="ViewTex" type="TextureRect" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
texture = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}
